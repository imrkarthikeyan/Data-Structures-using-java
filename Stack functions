class Stack{
    private int[] stackArray;
    private int top;
    private int maxSize;
    public Stack(int size){
        maxSize=size;
        stackArray=new int[maxSize];
    }
    public void push(int value){
        if(isFull()){
            System.out.println("Stack is full. Cannot push " + value);
        } 
        else{
            top++;
            stackArray[top]=value;
            System.out.println("Pushed:" + value);
        }
    }
    public int pop(){
        if(isEmpty()){
            System.out.println("Stack is empty. Cannot pop.");
            return -1; 
        }
        else{
            int poppedValue = stackArray[top];
            top--;
            return poppedValue;
        }
    }
    public int peek(){
        if(isEmpty()){
            System.out.println("Stack is empty. No element to peek.");
            return -1;
        }
        else{
            return stackArray[top];
        }
    }
    public boolean isEmpty(){
        return top==-1;
    }
    public boolean isFull(){
        return top==maxSize-1;
    }
    public void display(){
        if(isEmpty()){
            System.out.println("Stack is empty.");
        } 
        else{
            System.out.println("Stack elements:");
            for (int i=top;i>=0;i--){
                System.out.println(stackArray[i]);
            }
        }
    }
}
public class StackProgram{
    public static void main(String[] args){
        Stack stack=new Stack(5);
        stack.push(1);
        stack.push(2);
        stack.push(3);
        stack.display();
        System.out.println("Peek element: " + stack.peek());
        System.out.println("Popped element: " + stack.pop());
        stack.display();
        stack.push(4);
        stack.push(5);
        stack.display();
    }
}
